 finding minimum element in rotated array:-

#include <iostream>
using namespace std;

int main()
{
    int arr[6]= {10,15,18,3,8};
    
    int start = 0;
   
    int end = 5;
    
    int ans = arr[0]; /*in case array is not rotated*/
    
    
    while(start<=end)
    {
        int mid = start + (end-start)/2;
        
        if (arr[mid]>arr[0])
        {
            /*sorted on left side*/
            
            start = mid+1;
        }
        
        else {
            
            /*sorted on right side*/
            
            ans = arr[mid];
            
            end = mid-1;
            
            
        }
    }

      cout<<ans;

    return 0;
}





finding an element in rotated array:-



#include <iostream>
using namespace std;

int main()
{
     int arr[6]= {10,15,18,3,8};
    
    int start = 0;
   
    int end = 5;
    
    int target = 8;
    
    while(start<=end)
    {
        int mid = start + (end -start)/2;
        
        if(arr[mid]==target)
        {
            cout<<mid;
            break;
        }
        
        else if(arr[mid]>arr[0])
        {
            if(arr[0]<target && target<arr[mid])
            {
                end = mid-1;
            }
            
            else{
                
                start = mid+1;
            }
        }
        
        else if(arr[mid]<arr[0])
        {
            if(arr[mid]<target && target<arr[5])
            {
                start = mid+1;
            }
            
            else{
                
                 end = mid-1;
            }
        }
    }

    return 0;
}







finding kth missing positive integer:-

#include <iostream>
using namespace std;

int main()
{
    int arr[6] = {3,7,8,10,11,14};
    
    int k = 5;
    
    int start = 0;
    int end = 5;
    
    int ans = 6;
    
    
    while(start<=end)
    {
        int mid = start + (end-start)/2;
        
        
        if((arr[mid]-mid-1)>=k)
        {
            ans = mid;
            end = mid-1;
        }
        
        else 
        {
            start = mid+1;
        }
        
        
    }
    
    cout<<ans+k;
    
    
    return 0;
}





