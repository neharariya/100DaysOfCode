/* code for search insert problem */

Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

class Solution {
public:
    int searchInsert(vector<int>& arr, int target) {

        int n= arr.size();

         int first =0;
    int last =n-1;
    int mid;
    int ans= arr.size();
    
    while(first<=last)
    { 
        
        mid = (first + last)/2;
        
        if(arr[mid]==target)
        {
            ans=mid;
            break;
        }
        
       else if(arr[mid]>target)
       {
           ans=mid;
           last = mid-1;
       }
       
       else
       {
           first = mid+1;
       }
    }
    
    return ans;

                             }
              };


ANOTHER WAY:-

class Solution {
public:
    int searchInsert(vector<int>& arr, int target) {

        int n= arr.size();

         int first =0;
    int last =n-1;
    int mid;
    
    while(first<=last)
    { 
        
        mid = (first + last)/2;
        
        if(arr[mid]==target)
        {
            return mid;
        }
        
       else if(arr[mid]>target)
       {
           last = mid-1;
       }
       
       else
       {
           first = mid+1;
       }
    }
    
    return first;

                             }
              };
